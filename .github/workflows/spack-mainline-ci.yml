name: Spack CI on mainline

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  QT_QPA_PLATFORM: offscreen

jobs:
  main:
    name: Spack build & run on mainline
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac.
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lihpc-computational-geometry/spack-cgcore:latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Initialize the dev environment
        shell: bash
        run : |
          source /spack/share/spack/setup-env.sh
          git clone --depth=1 https://github.com/LIHPC-Computational-Geometry/spack_recipes_meshing.git
          spack repo add ./spack_recipes_meshing/meshing
          spack repo add ./spack_recipes_meshing/meshing_supersede

      - name: Build and install with Spack
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh 
          spack install --test root ${{ github.event.repository.name }}@develop^guitoolkitsvariables@develop

      - name: Test of link
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          spack load ${{ github.event.repository.name }}
          cd test_link/
          cmake -S . -B build
          cmake --build build
          cmake --build build --target test

      - name: Archive test of link logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-of-link-logs
          path: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/test_link/build/Testing/Temporary/LastTest.log