name: Reusable Spack CI

on:
  workflow_call:

env:
  QT_QPA_PLATFORM: offscreen

jobs:
  main:
    name: Main workflow job
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac.
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lihpc-computational-geometry/spack-cgcore:latest
    strategy:
      fail-fast: false

    steps:
      - name: Spack build and install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          spack env create ci-env
          spack env activate ci-env
          # add python and pytest for unit tests
          spack add python@3
          spack add py-pytest
          # add the product to test
          echo Branche @git.${{ github.ref_name }}
          echo spack add ${{ github.event.repository.name }} @git.${{ github.ref_name }}
          spack add ${{ github.event.repository.name }} @git.${{ github.ref_name }}
          # install
          spack concretize
          spack install -v --test=root

      - name: Checkout source code for test of link 
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Test of link
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          # load the environment
          spack env activate meshing-env
          spack load python
          spack load py-pytest
          spack load ${{ github.event.repository.name }}

          # trace for logs
          python --version
          command -v python
          pytest --version
          command -v pytest
          echo $PYTHONPATH

          # set PYTHONPATH variable
          export PACKAGE_PATH=$PACKAGE_PATH/lib/python3.10/site-packages
          export PYTHONPATH=$PYTHONPATH:$PACKAGE_PATH
          echo $PYTHONPATH

          # build test_link and run tests
          cd test_link/
          cmake -S . -B build
          cmake --build build
          cmake --build build --target test

      - name: Archive test of link logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-of-link-logs
          path: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/test_link/build/Testing/Temporary/LastTest.log